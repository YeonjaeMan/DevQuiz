import '../../model/problem.dart';

List<Problem> nodejss = [
  Problem(
    index: 0,
    question: "Node.js의 주요 특징 중 하나는 무엇인가요?",
    options: ["비동기 I/O 처리", "블로킹 I/O 처리", "단일 스레드", "다중 스레드"],
    answer: "비동기 I/O 처리",
    solution: "Node.js는 비동기 I/O 모델을 사용하여 높은 성능과 확장성을 제공합니다.",
  ),
  Problem(
    index: 1,
    question: "Node.js에서 가장 많이 사용되는 패키지 매니저는 무엇인가요?",
    options: ["npm", "yarn", "bower", "pip"],
    answer: "npm",
    solution: "npm은 Node.js의 기본 패키지 매니저로, 패키지 설치 및 관리에 사용됩니다.",
  ),
  Problem(
    index: 2,
    question: "Node.js에서 서버를 생성하기 위해 사용하는 모듈은 무엇인가요?",
    options: ["http", "fs", "url", "path"],
    answer: "http",
    solution: "http 모듈은 Node.js에서 HTTP 서버와 클라이언트를 생성하는 데 사용됩니다.",
  ),
  Problem(
    index: 3,
    question: "Node.js에서 비동기 작업을 처리하기 위해 사용하는 함수는 무엇인가요?",
    options: ["setTimeout", "setInterval", "Promise", "callback"],
    answer: "Promise",
    solution: "Promise는 비동기 작업의 완료를 다루기 위한 객체입니다.",
  ),
  Problem(
    index: 4,
    question: "Express.js는 무엇을 위한 프레임워크인가요?",
    options: ["웹 애플리케이션 개발", "데이터베이스 관리", "UI 렌더링", "모바일 개발"],
    answer: "웹 애플리케이션 개발",
    solution: "Express.js는 Node.js를 위한 웹 애플리케이션 프레임워크입니다.",
  ),
  Problem(
    index: 5,
    question: "Node.js에서 미들웨어의 역할은 무엇인가요?",
    options: ["데이터베이스 연결", "HTTP 요청 처리", "로깅 및 인증", "UI 렌더링"],
    answer: "로깅 및 인증",
    solution: "미들웨어는 요청과 응답 객체를 수정하여 로깅, 인증 등을 처리합니다.",
  ),
  Problem(
    index: 6,
    question: "Node.js에서 파일 시스템을 다루기 위해 사용하는 모듈은 무엇인가요?",
    options: ["fs", "path", "http", "url"],
    answer: "fs",
    solution: "fs 모듈은 파일 시스템에 접근하고 파일을 읽고 쓰는 데 사용됩니다.",
  ),
  Problem(
    index: 7,
    question: "Node.js의 비동기 I/O를 구현하는 방식은 무엇인가요?",
    options: ["이벤트 루프", "스레드 풀", "블로킹 호출", "비동기 호출"],
    answer: "이벤트 루프",
    solution: "이벤트 루프는 Node.js의 비동기 I/O 작업을 처리하는 핵심 구조입니다.",
  ),
  Problem(
    index: 8,
    question: "Node.js에서 RESTful API를 구현하기 위해 주로 사용하는 패턴은 무엇인가요?",
    options: ["MVC", "MVVM", "Flux", "Observer"],
    answer: "MVC",
    solution: "Node.js에서 RESTful API를 구현할 때 MVC 패턴이 일반적으로 사용됩니다.",
  ),
  Problem(
    index: 9,
    question: "Node.js에서 환경 변수를 설정하기 위해 사용하는 파일은 무엇인가요?",
    options: [".env", "config.json", "settings.yml", "environment.xml"],
    answer: ".env",
    solution: ".env 파일은 환경 변수를 관리하는 데 사용됩니다.",
  ),
  Problem(
    index: 10,
    question: "Node.js에서 데이터베이스와의 연결을 위해 많이 사용하는 ORM은 무엇인가요?",
    options: ["Sequelize", "Mongoose", "TypeORM", "Knex"],
    answer: "Sequelize",
    solution: "Sequelize는 Node.js에서 사용되는 Promise 기반의 ORM입니다.",
  ),
  Problem(
    index: 11,
    question: "Node.js에서 클러스터링을 통해 얻을 수 있는 이점은 무엇인가요?",
    options: ["부하 분산", "성능 향상", "단일 스레드 유지", "모든 요청 처리"],
    answer: "부하 분산",
    solution: "클러스터링은 여러 프로세스를 사용하여 서버의 부하를 분산시켜 성능을 향상시킵니다.",
  ),
  Problem(
    index: 12,
    question: "Node.js에서 비동기 처리를 위한 콜백 함수의 단점은 무엇인가요?",
    options: ["가독성 저하", "성능 저하", "메모리 누수", "스레드 잠금"],
    answer: "가독성 저하",
    solution: "콜백 지옥은 가독성을 떨어뜨리고 코드 유지보수를 어렵게 만듭니다.",
  ),
  Problem(
    index: 13,
    question: "Node.js에서 CORS를 설정하기 위한 패키지는 무엇인가요?",
    options: ["cors", "helmet", "express", "body-parser"],
    answer: "cors",
    solution: "cors 패키지는 Node.js에서 CORS를 설정하는 데 사용됩니다.",
  ),
  Problem(
    index: 14,
    question: "Node.js에서 로그를 기록하기 위해 많이 사용하는 패키지는 무엇인가요?",
    options: ["winston", "morgan", "debug", "log4js"],
    answer: "winston",
    solution: "winston은 다양한 기능을 제공하는 강력한 로그 기록 라이브러리입니다.",
  ),
  Problem(
    index: 15,
    question: "Node.js에서 세션 관리를 위해 주로 사용하는 패키지는 무엇인가요?",
    options: ["express-session", "cookie-parser", "body-parser", "passport"],
    answer: "express-session",
    solution: "express-session은 Node.js에서 세션 관리를 위한 미들웨어입니다.",
  ),
  Problem(
    index: 16,
    question: "Node.js에서 Error Handling을 위한 일반적인 패턴은 무엇인가요?",
    options: ["try-catch", "Promise.catch", "EventEmitter", "callback"],
    answer: "try-catch",
    solution: "try-catch 문은 Node.js에서 동기 및 비동기 코드를 포함한 오류 처리를 위해 사용됩니다.",
  ),
  Problem(
    index: 17,
    question: "Node.js에서 HTTP 서버를 만들기 위해 사용하는 기본 모듈은 무엇인가요?",
    options: ["http", "fs", "path", "url"],
    answer: "http",
    solution: "http 모듈은 Node.js에서 HTTP 서버를 생성하는 데 사용됩니다.",
  ),
  Problem(
    index: 18,
    question: "Node.js에서 비동기 작업을 처리하기 위해 async/await를 사용하는 이유는 무엇인가요?",
    options: ["코드 가독성 향상", "성능 향상", "에러 처리 용이", "모든 옵션"],
    answer: "모든 옵션",
    solution: "async/await는 코드 가독성을 높이고, 에러 처리를 쉽게 하며, 비동기 작업을 더 간결하게 만듭니다.",
  ),
  Problem(
    index: 19,
    question: "Node.js에서 REST API의 응답 형식으로 가장 일반적으로 사용하는 형식은 무엇인가요?",
    options: ["JSON", "XML", "HTML", "Plain Text"],
    answer: "JSON",
    solution: "JSON은 REST API에서 데이터 교환 형식으로 가장 많이 사용됩니다.",
  ),
];
