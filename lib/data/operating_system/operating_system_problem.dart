import '../../model/problem.dart';

List<Problem> operatingSystems = [
  Problem(
    index: 0,
    question: "운영체제의 주된 역할은 무엇인가?",
    options: ["데이터베이스 관리", "하드웨어와 소프트웨어 간의 인터페이스 제공", "웹 서버 운영", "네트워크 보안 강화"],
    answer: "하드웨어와 소프트웨어 간의 인터페이스 제공",
    solution:
        "운영체제는 하드웨어와 소프트웨어 간의 인터페이스를 제공하여, 사용자와 프로그램이 하드웨어를 효율적으로 사용할 수 있도록 돕습니다. 다른 옵션들은 운영체제의 주된 역할과는 관련이 없습니다.",
  ),
  Problem(
    index: 1,
    question: "다음 중 프로세스의 상태가 아닌 것은?",
    options: ["준비 상태", "실행 상태", "대기 상태", "종료 상태"],
    answer: "종료 상태",
    solution:
        "프로세스는 준비 상태, 실행 상태, 대기 상태 등 여러 상태를 가질 수 있지만 '종료 상태'는 특정 프로세스의 상태가 아닌, 프로세스가 이미 종료된 상태를 의미하므로 정답입니다.",
  ),
  Problem(
    index: 2,
    question: "다음 중 운영체제의 종류가 아닌 것은?",
    options: ["리눅스", "윈도우", "안드로이드", "파이썬"],
    answer: "파이썬",
    solution:
        "리눅스, 윈도우, 안드로이드는 모두 운영체제의 종류입니다. 반면 파이썬은 프로그래밍 언어이므로 운영체제의 종류가 아닙니다.",
  ),
  Problem(
    index: 3,
    question: "파일 시스템의 주요 기능은 무엇인가?",
    options: ["네트워크 관리", "데이터 저장 및 관리", "프로세스 스케줄링", "메모리 할당"],
    answer: "데이터 저장 및 관리",
    solution: "파일 시스템은 데이터를 저장하고 관리하는 역할을 하며, 하드웨어 자원이나 프로세스 스케줄링과는 관련이 없습니다.",
  ),
  Problem(
    index: 4,
    question: "다음 중 가상 메모리의 장점은 무엇인가?",
    options: ["메모리 사용량 감소", "프로그램 실행 속도 증가", "물리적 메모리의 한계 극복", "하드웨어 비용 절감"],
    answer: "물리적 메모리의 한계 극복",
    solution:
        "가상 메모리는 물리적 메모리의 한계를 극복하고, 더 많은 프로세스를 실행할 수 있도록 도와줍니다. 나머지 옵션은 가상 메모리의 주요 장점이 아닙니다.",
  ),
  Problem(
    index: 5,
    question: "다음 중 스레드의 특징이 아닌 것은?",
    options: [
      "프로세스 내에서 실행된다",
      "독립적인 메모리 공간을 가진다",
      "경량 프로세스라고도 불린다",
      "다른 스레드와 자원을 공유할 수 있다"
    ],
    answer: "독립적인 메모리 공간을 가진다",
    solution:
        "스레드는 프로세스 내에서 실행되며, 다른 스레드와 자원을 공유합니다. 그러나 스레드는 독립적인 메모리 공간을 가지지 않으며, 이는 프로세스의 특징입니다.",
  ),
  Problem(
    index: 6,
    question: "다음 중 운영체제의 커널 역할은 무엇인가?",
    options: ["사용자 인터페이스 제공", "하드웨어 자원 관리", "애플리케이션 실행", "데이터 암호화"],
    answer: "하드웨어 자원 관리",
    solution:
        "커널은 하드웨어 자원을 관리하는 핵심 구성 요소로, 사용자 인터페이스나 애플리케이션 실행과는 다른 역할을 수행합니다.",
  ),
  Problem(
    index: 7,
    question: "다음 중 선점형 스케줄링 알고리즘은 무엇인가?",
    options: [
      "FIFO",
      "RR (Round Robin)",
      "SJF (Shortest Job First)",
      "FCFS (First-Come, First-Served)"
    ],
    answer: "RR (Round Robin)",
    solution:
        "RR (Round Robin) 알고리즘은 각 프로세스에 일정 시간 할당 후 다음 프로세스로 전환하는 선점형 스케줄링 방식입니다. 나머지 옵션들은 비선점형입니다.",
  ),
  Problem(
    index: 8,
    question: "다음 중 세마포어의 주된 목적은 무엇인가?",
    options: ["프로세스 간 통신", "메모리 보호", "동기화 및 상호 배제", "파일 시스템 관리"],
    answer: "동기화 및 상호 배제",
    solution:
        "세마포어는 프로세스 간의 동기화 및 상호 배제를 위해 사용됩니다. 이는 여러 프로세스가 공유 자원에 접근할 때 충돌을 방지합니다.",
  ),
  Problem(
    index: 9,
    question: "다음 중 운영체제에서의 '페이지 교체'란 무엇인가?",
    options: [
      "프로세스를 종료하는 것",
      "메모리에서 페이지를 제거하고 새로운 페이지를 로드하는 것",
      "파일을 삭제하는 것",
      "스레드를 생성하는 것"
    ],
    answer: "메모리에서 페이지를 제거하고 새로운 페이지를 로드하는 것",
    solution:
        "페이지 교체는 메모리에서 사용되지 않는 페이지를 제거하고 새로운 페이지를 로드하는 과정을 의미합니다. 이는 메모리 관리를 위한 중요한 기능입니다.",
  ),
  Problem(
    index: 10,
    question: "다음 중 I/O 버퍼링의 주된 목적은 무엇인가?",
    options: ["CPU 사용량 증가", "데이터 전송 속도 향상", "메모리 사용 줄이기", "데이터 손실 방지"],
    answer: "데이터 전송 속도 향상",
    solution: "I/O 버퍼링은 데이터 전송 속도를 향상시키기 위해 사용되며, CPU와 장치 간의 속도 차이를 완화합니다.",
  ),
  Problem(
    index: 11,
    question: "다음 중 스왑 공간의 주 역할은 무엇인가?",
    options: ["프로세스 실행", "데이터를 저장", "메모리 부족 시 프로세스를 저장", "네트워크 트래픽 관리"],
    answer: "메모리 부족 시 프로세스를 저장",
    solution: "스왑 공간은 메모리가 부족할 때 프로세스를 디스크에 저장하여 메모리를 확보하는 용도로 사용됩니다.",
  ),
  Problem(
    index: 12,
    question: "다음 중 운영체제에서 '멀티태스킹'이란 무엇인가?",
    options: ["여러 프로세스를 동시에 실행하는 것", "단일 프로세스 실행", "메모리 관리", "파일 시스템 관리"],
    answer: "여러 프로세스를 동시에 실행하는 것",
    solution: "멀티태스킹은 여러 프로세스를 동시에 실행하는 것을 의미하며, 이는 사용자에게 더 나은 경험을 제공합니다.",
  ),
  Problem(
    index: 13,
    question: "다음 중 '부팅'의 정의는 무엇인가?",
    options: [
      "프로세스를 종료하는 것",
      "컴퓨터를 시작하고 운영체제를 로드하는 과정",
      "하드웨어를 업그레이드하는 것",
      "소프트웨어를 설치하는 것"
    ],
    answer: "컴퓨터를 시작하고 운영체제를 로드하는 과정",
    solution:
        "부팅은 컴퓨터를 시작하고 운영체제를 로드하는 과정을 말하며, 이는 시스템이 정상적으로 작동하기 위해 필수적인 단계입니다.",
  ),
  Problem(
    index: 14,
    question: "다음 중 '디스크 조각 모음'의 목적은 무엇인가?",
    options: ["데이터 보안 강화", "파일을 연속적으로 저장하여 성능 향상", "백업 생성", "파일 삭제"],
    answer: "파일을 연속적으로 저장하여 성능 향상",
    solution:
        "디스크 조각 모음은 파일을 연속적으로 저장하여 디스크 성능을 향상시키기 위해 수행됩니다. 이는 데이터 접근 속도를 높입니다.",
  ),
  Problem(
    index: 15,
    question: "다음 중 '임계 구역'이란 무엇인가?",
    options: [
      "CPU의 처리 속도",
      "공유 자원에 접근할 때의 제한 구역",
      "메모리의 일시적 공간",
      "프로세스의 실행 상태"
    ],
    answer: "공유 자원에 접근할 때의 제한 구역",
    solution: "임계 구역은 여러 프로세스가 공유 자원에 접근할 때 충돌을 방지하기 위해 설정된 제한 구역을 의미합니다.",
  ),
  Problem(
    index: 16,
    question: "다음 중 '커널 패닉'이란 무엇인가?",
    options: [
      "파일 시스템 손상",
      "운영체제가 심각한 오류로 중단되는 상황",
      "네트워크 연결 문제",
      "프로세스가 무한 루프에 빠지는 상황"
    ],
    answer: "운영체제가 심각한 오류로 중단되는 상황",
    solution:
        "커널 패닉은 운영체제가 심각한 오류로 중단되는 상황을 일컫으며, 이로 인해 시스템이 정상적으로 작동할 수 없게 됩니다.",
  ),
  Problem(
    index: 17,
    question: "다음 중 '페이징'의 주요 목적은 무엇인가?",
    options: ["프로세스 간 통신", "메모리 단편화를 줄이는 것", "CPU 사용량 증가", "파일 시스템 관리"],
    answer: "메모리 단편화를 줄이는 것",
    solution: "페이징은 메모리의 단편화를 줄이고, 프로세스가 필요한 페이지를 효율적으로 관리하기 위한 방법입니다.",
  ),
  Problem(
    index: 18,
    question: "다음 중 'IRQ'란 무엇을 의미하는가?",
    options: ["인터럽트 요청", "인프라 관리", "데이터 전송", "메모리 할당"],
    answer: "인터럽트 요청",
    solution: "IRQ는 인터럽트 요청을 의미하며, 하드웨어 장치가 CPU에 작업을 요청할 때 사용됩니다.",
  ),
  Problem(
    index: 19,
    question: "다음 중 '자원 할당'의 문제를 해결하는 알고리즘은 무엇인가?",
    options: ["FCFS", "Banker’s Algorithm", "Round Robin", "SJF"],
    answer: "Banker’s Algorithm",
    solution:
        "Banker’s Algorithm은 자원 할당 문제를 해결하기 위해 사용되는 알고리즘으로, 시스템의 안전성을 보장합니다.",
  ),
];
