import '../../model/problem.dart';

List<Problem> vues = [
  Problem(
    index: 0,
    question: "Vue.js의 주요 특징 중 하나는 무엇인가요?",
    options: ["상태 관리", "데이터 바인딩", "DOM 조작", "API 호출"],
    answer: "데이터 바인딩",
    solution: "Vue.js는 데이터 바인딩을 통해 모델과 뷰를 쉽게 연결할 수 있게 합니다.",
  ),
  Problem(
    index: 1,
    question: "Vue에서 상태(state)를 관리하는 방법은 무엇인가요?",
    options: ["Vuex", "setState()", "useState()", "updateState()"],
    answer: "Vuex",
    solution: "Vuex는 Vue 애플리케이션의 상태 관리를 위한 공식 라이브러리입니다.",
  ),
  Problem(
    index: 2,
    question: "Vue 컴포넌트의 생명주기를 관리하는 메서드는 무엇인가요?",
    options: ["created", "mounted", "updated", "이 모두"],
    answer: "이 모두",
    solution: "이 모든 메서드는 Vue 컴포넌트의 생명주기와 관련된 훅입니다.",
  ),
  Problem(
    index: 3,
    question: "Vue에서 props의 용도는 무엇인가요?",
    options: ["컴포넌트의 상태를 관리하기 위해", "부모 컴포넌트에서 자식 컴포넌트로 데이터 전달", "컴포넌트를 스타일링하기 위해", "DOM 요소를 직접 조작하기 위해"],
    answer: "부모 컴포넌트에서 자식 컴포넌트로 데이터 전달",
    solution: "Props는 부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달하는 데 사용됩니다.",
  ),
  Problem(
    index: 4,
    question: "Vue의 computed 속성은 무엇을 위한 것인가요?",
    options: ["상태 관리", "부수 효과", "상태 기반 데이터 처리", "라우팅 관리"],
    answer: "상태 기반 데이터 처리",
    solution: "Computed 속성은 상태에 따라 동적으로 계산된 데이터를 제공하는 데 사용됩니다.",
  ),
  Problem(
    index: 5,
    question: "Vue의 watch 속성의 주 용도는 무엇인가요?",
    options: ["상태 업데이트", "부수 효과 수행", "렌더링 최적화", "데이터 변경 감지"],
    answer: "데이터 변경 감지",
    solution: "Watch 속성은 데이터가 변경될 때 특정 작업을 수행하는 데 사용됩니다.",
  ),
  Problem(
    index: 6,
    question: "Vue 컴포넌트는 어떻게 정의하나요?",
    options: ["function과 return", "클래스와 render 메서드", "Vue.extend() 메서드", "HTML 태그"],
    answer: "Vue.extend() 메서드",
    solution: "Vue 컴포넌트는 Vue.extend()를 사용하여 정의할 수 있으며, 객체 리터럴로도 정의할 수 있습니다.",
  ),
  Problem(
    index: 7,
    question: "Vue의 v-bind 디렉티브는 무엇을 위한 것인가요?",
    options: ["이벤트 핸들링", "데이터 바인딩", "조건부 렌더링", "루프 렌더링"],
    answer: "데이터 바인딩",
    solution: "v-bind는 HTML 속성에 Vue 인스턴스의 데이터를 바인딩하는 데 사용됩니다.",
  ),
  Problem(
    index: 8,
    question: "Vue에서 컴포넌트 간 통신을 위해 사용하는 방법은 무엇인가요?",
    options: ["props", "events", "emit", "이 모두"],
    answer: "이 모두",
    solution: "컴포넌트 간 통신은 props, events, emit 등을 통해 이루어질 수 있습니다.",
  ),
  Problem(
    index: 9,
    question: "Vue의 v-if 디렉티브는 무엇을 위한 것인가요?",
    options: ["조건부 렌더링", "데이터 바인딩", "루프 렌더링", "스타일링"],
    answer: "조건부 렌더링",
    solution: "v-if는 특정 조건에 따라 DOM 요소를 렌더링할지 여부를 결정하는 데 사용됩니다.",
  ),
  Problem(
    index: 10,
    question: "Vue의 single-file components(SFC)란 무엇인가요?",
    options: ["HTML 파일", "CSS 파일", "Vue 컴포넌트를 하나의 파일에 작성한 것", "JavaScript 파일"],
    answer: "Vue 컴포넌트를 하나의 파일에 작성한 것",
    solution: "SFC는 Vue 컴포넌트를 .vue 파일로 작성하여 HTML, CSS, JavaScript를 하나의 파일에 포함하는 형식입니다.",
  ),
  Problem(
    index: 11,
    question: "Vue의 lifecycle hook 중 'mounted'의 용도는 무엇인가요?",
    options: ["컴포넌트가 생성될 때", "DOM에 삽입될 때", "데이터가 변경될 때", "컴포넌트가 파괴될 때"],
    answer: "DOM에 삽입될 때",
    solution: "'mounted' 훅은 컴포넌트가 DOM에 삽입된 후에 호출됩니다.",
  ),
  Problem(
    index: 12,
    question: "Vue에서 비동기 데이터를 처리하기 위한 방법은 무엇인가요?",
    options: ["setTimeout()", "async/await", "Promise", "이 모두"],
    answer: "이 모두",
    solution: "Vue에서는 비동기 데이터를 처리하기 위해 setTimeout(), async/await, Promise를 사용할 수 있습니다.",
  ),
  Problem(
    index: 13,
    question: "Vue의 v-for 디렉티브는 무엇을 위한 것인가요?",
    options: ["조건부 렌더링", "루프 렌더링", "이벤트 핸들링", "데이터 바인딩"],
    answer: "루프 렌더링",
    solution: "v-for는 배열이나 객체를 반복하여 리스트를 렌더링하는 데 사용됩니다.",
  ),
  Problem(
    index: 14,
    question: "Vue에서 사용자 정의 이벤트를 발행하는 방법은 무엇인가요?",
    options: ["emit() 메서드", "dispatch() 메서드", "trigger() 메서드", "call() 메서드"],
    answer: "emit() 메서드",
    solution: "emit() 메서드는 자식 컴포넌트에서 부모 컴포넌트로 사용자 정의 이벤트를 발행하는 데 사용됩니다.",
  ),
  Problem(
    index: 15,
    question: "Vue의 computed 속성이 아닌 것은 무엇인가요?",
    options: ["상태 기반 데이터 처리", "메모이제이션", "비동기 처리", "의존성 추적"],
    answer: "비동기 처리",
    solution: "Computed 속성은 동기적으로 상태에 따라 데이터를 계산하지만, 비동기 처리는 지원하지 않습니다.",
  ),
  Problem(
    index: 16,
    question: "Vue에서 전역 상태 관리를 위한 라이브러리는 무엇인가요?",
    options: ["React Router", "Vue Router", "Vuex", "Vue CLI"],
    answer: "Vuex",
    solution: "Vuex는 Vue 애플리케이션에서 전역 상태 관리를 위한 공식 라이브러리입니다.",
  ),
  Problem(
    index: 17,
    question: "Vue의 template 구문에서 사용되는 데이터 바인딩 방법은 무엇인가요?",
    options: ["{{ }}", "[ ]", "( )", "< >"],
    answer: "{{ }}",
    solution: "Vue의 template 구문에서는 {{ }}를 사용하여 데이터를 바인딩합니다.",
  ),
  Problem(
    index: 18,
    question: "Vue에서 컴포넌트 간의 데이터 전달 방식으로 적절하지 않은 것은 무엇인가요?",
    options: ["props", "emit", "localStorage", "이벤트 버스"],
    answer: "localStorage",
    solution: "localStorage는 컴포넌트 간의 데이터 전달 방식이 아니라 웹 스토리지 API입니다.",
  ),
  Problem(
    index: 19,
    question: "Vue에서 watch 속성의 용도는 무엇인가요?",
    options: ["상태 업데이트", "데이터 감지 및 대응", "렌더링 최적화", "조건부 렌더링"],
    answer: "데이터 감지 및 대응",
    solution: "Watch 속성은 특정 데이터의 변화를 감지하고, 변화에 따라 특정 작업을 수행하는 데 사용됩니다.",
  ),
];